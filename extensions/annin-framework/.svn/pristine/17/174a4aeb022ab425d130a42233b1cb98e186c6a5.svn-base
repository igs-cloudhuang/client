"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.onAfterBuild = exports.onBeforeBuild = exports.throwError = void 0;
const fs = __importStar(require("fs"));
const path = __importStar(require("path"));
const PACKAGE_NAME = 'annin-framework';
exports.throwError = true;
const onBeforeBuild = async function (options, result) {
    // @ts-ignore
    const pkgOptions = options.packages[PACKAGE_NAME];
    if (!pkgOptions || !pkgOptions.enabled) {
        console.log("annin-framework : disable build-templates");
        return;
    }
    if (!fs.existsSync(path.join(Editor.Project.path, 'build-templates/web-mobile'))) {
        // @ts-ignore
        fs.mkdirSync(path.join(Editor.Project.path, 'build-templates/web-mobile'), { recursive: true });
        console.log(PACKAGE_NAME, Editor.Project.path);
    }
    fs.copyFileSync(path.join(Editor.Project.path, 'extensions/annin-framework/template/application.ejs'), path.join(Editor.Project.path, 'build-templates/web-mobile/application.ejs'));
    let fileContent = fs.readFileSync(path.join(Editor.Project.path, 'extensions/annin-framework/template/index.ejs'), 'utf-8');
    if (pkgOptions.gameName.tada) {
        fileContent = fileContent.replace('%tadaTitle%', '\'' + pkgOptions.gameName.tada + '\'');
    }
    else {
        fileContent = fileContent.replace('%tadaTitle%', '\'' + options.name + '\'');
    }
    if (pkgOptions.gameName.jili) {
        fileContent = fileContent.replace('%jiliTitle%', '\'' + pkgOptions.gameName.jili + '\'');
    }
    else {
        fileContent = fileContent.replace('%jiliTitle%', '\'' + options.name + '\'');
    }
    fileContent = fileContent.replaceAll('%gameId%', pkgOptions.gameId);
    fs.writeFileSync(path.join(Editor.Project.path, 'build-templates/web-mobile/index.ejs'), fileContent, 'utf-8');
    if (pkgOptions.delay && pkgOptions.delay > 0) {
        await sleep(pkgOptions.delay);
    }
};
exports.onBeforeBuild = onBeforeBuild;
const onAfterBuild = async function (options, result) {
    let manifestPath = path.join(result.dest, 'assets/versions.json');
    let bundleVers = fs.readFileSync(result.paths.settings).toString('utf8');
    let bundleStudent = JSON.parse(bundleVers);
    fs.writeFileSync(manifestPath, JSON.stringify(bundleStudent.assets.bundleVers));
};
exports.onAfterBuild = onAfterBuild;
function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}
